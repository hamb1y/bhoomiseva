---
// src/components/RecentBlogs.astro

import Card from "./Card.astro";

export interface Props {
  n?: number;
}

const { n = 5 } = Astro.props;

// Glob all `.md` files in your `src/pages/blogs/` folder:
const posts = await Astro.glob("../pages/blogs/*.md");

// Normalize frontmatter dates so both numeric timestamps and ISO strings render correctly.
const sorted = posts
  .map((post) => {
    const rawDate = post.frontmatter.date;
    const parsedDate = rawDate instanceof Date ? rawDate : new Date(rawDate);
    const timestamp = parsedDate.getTime();

    return {
      ...post,
      frontmatter: {
        ...post.frontmatter,
        date: parsedDate,
      },
      timestamp,
    };
  })
  .filter((post) => !Number.isNaN(post.timestamp))
  .sort((a, b) => b.timestamp - a.timestamp)
  .slice(0, n)
  .map(({ timestamp, ...rest }) => rest);
---
<section class="recent-blogs">
  {sorted.map(post => (
    <Card
      title={post.frontmatter.title}
      date={post.frontmatter.date}
      thumbnail={post.frontmatter.thumbnail}
      url={post.url}
    />
  ))}
</section>
